<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bssys.mapper.BsRoleMapper">
  <resultMap id="BaseResultMap" type="cn.bssys.po.BsRole">
    <id column="rid" jdbcType="BIGINT" property="rid" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="ddlId" jdbcType="VARCHAR" property="ddlid" />
    <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="id" jdbcType="BIGINT" property="id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rid, role, ddlId, resource_ids, available, id
  </sql>
  <select id="selectByExample" parameterType="cn.bssys.po.BsRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bs_role
    where rid = #{rid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bs_role
    where rid = #{rid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bssys.po.BsRoleExample">
    delete from bs_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bssys.po.BsRole">
    insert into bs_role (rid, role, ddlId, 
      resource_ids, available, id
      )
    values (#{rid,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{ddlid,jdbcType=VARCHAR}, 
      #{resourceIds,jdbcType=VARCHAR}, #{available,jdbcType=BIT}, #{id,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bssys.po.BsRole">
    insert into bs_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        rid,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="ddlid != null">
        ddlId,
      </if>
      <if test="resourceIds != null">
        resource_ids,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="id != null">
        id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        #{rid,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="ddlid != null">
        #{ddlid,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null">
        #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bssys.po.BsRoleExample" resultType="java.lang.Long">
    select count(*) from bs_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bs_role
    <set>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=BIGINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.ddlid != null">
        ddlId = #{record.ddlid,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceIds != null">
        resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=BIT},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bs_role
    set rid = #{record.rid,jdbcType=BIGINT},
      role = #{record.role,jdbcType=VARCHAR},
      ddlId = #{record.ddlid,jdbcType=VARCHAR},
      resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      available = #{record.available,jdbcType=BIT},
      id = #{record.id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bssys.po.BsRole">
    update bs_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="ddlid != null">
        ddlId = #{ddlid,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null">
        resource_ids = #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
    </set>
    where rid = #{rid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bssys.po.BsRole">
    update bs_role
    set role = #{role,jdbcType=VARCHAR},
      ddlId = #{ddlid,jdbcType=VARCHAR},
      resource_ids = #{resourceIds,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT},
      id = #{id,jdbcType=BIGINT}
    where rid = #{rid,jdbcType=BIGINT}
  </update>
</mapper>