<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bssys.mapper.BsGradprojMapper">
  <resultMap id="BaseResultMap" type="cn.bssys.po.BsGradproj">
    <id column="bsid" jdbcType="INTEGER" property="bsid" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="dgid" jdbcType="INTEGER" property="dgid" />
    <result column="reviewer" jdbcType="BIGINT" property="reviewer" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="year" jdbcType="INTEGER" property="year" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bsid, sid, dgid, reviewer, score, degree, year
  </sql>
  <select id="selectByExample" parameterType="cn.bssys.po.BsGradprojExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_gradproj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bs_gradproj
    where bsid = #{bsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bs_gradproj
    where bsid = #{bsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bssys.po.BsGradprojExample">
    delete from bs_gradproj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bssys.po.BsGradproj">
    insert into bs_gradproj (bsid, sid, dgid, 
      reviewer, score, degree, 
      year)
    values (#{bsid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{dgid,jdbcType=INTEGER}, 
      #{reviewer,jdbcType=BIGINT}, #{score,jdbcType=DOUBLE}, #{degree,jdbcType=VARCHAR}, 
      #{year,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bssys.po.BsGradproj">
    insert into bs_gradproj
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bsid != null">
        bsid,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="dgid != null">
        dgid,
      </if>
      <if test="reviewer != null">
        reviewer,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="year != null">
        year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bsid != null">
        #{bsid,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="dgid != null">
        #{dgid,jdbcType=INTEGER},
      </if>
      <if test="reviewer != null">
        #{reviewer,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bssys.po.BsGradprojExample" resultType="java.lang.Long">
    select count(*) from bs_gradproj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bs_gradproj
    <set>
      <if test="record.bsid != null">
        bsid = #{record.bsid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.dgid != null">
        dgid = #{record.dgid,jdbcType=INTEGER},
      </if>
      <if test="record.reviewer != null">
        reviewer = #{record.reviewer,jdbcType=BIGINT},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bs_gradproj
    set bsid = #{record.bsid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      dgid = #{record.dgid,jdbcType=INTEGER},
      reviewer = #{record.reviewer,jdbcType=BIGINT},
      score = #{record.score,jdbcType=DOUBLE},
      degree = #{record.degree,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bssys.po.BsGradproj">
    update bs_gradproj
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="dgid != null">
        dgid = #{dgid,jdbcType=INTEGER},
      </if>
      <if test="reviewer != null">
        reviewer = #{reviewer,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
    </set>
    where bsid = #{bsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bssys.po.BsGradproj">
    update bs_gradproj
    set sid = #{sid,jdbcType=INTEGER},
      dgid = #{dgid,jdbcType=INTEGER},
      reviewer = #{reviewer,jdbcType=BIGINT},
      score = #{score,jdbcType=DOUBLE},
      degree = #{degree,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER}
    where bsid = #{bsid,jdbcType=INTEGER}
  </update>
</mapper>